{"remainingRequest":"/usr/local/var/www/nihongo/frontend/node_modules/babel-loader/lib/index.js!/usr/local/var/www/nihongo/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/var/www/nihongo/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/nihongo/frontend/src/components/kana/start/start.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/nihongo/frontend/src/components/kana/start/start.vue","mtime":1552376461753},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"/usr/local/var/www/nihongo/frontend/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Blur from '../../blur/blur';\nimport { getKanaList } from '../../../api/kana';\nexport default {\n  name: \"start\",\n  props: {\n    blurSrc: {\n      type: String\n    },\n    model1: {\n      type: String\n    },\n    model2: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      kanas: [],\n      keys: ['hiragana', 'katakana', 'romaji'],\n      words: [],\n      blurFlag: false,\n      countDown: 3,\n      preItem: false\n    };\n  },\n  mounted: function mounted() {\n    this.$emit('gameInit');\n    this.initKanas();\n    this.countDownStart();\n  },\n  methods: {\n    initKanas: function initKanas() {\n      var _this = this;\n\n      getKanaList().then(function (res) {\n        _this.kanas = res.data.data;\n\n        _this.initWords();\n      });\n    },\n    initWords: function initWords() {\n      var _this2 = this;\n\n      var model1 = this.keys[this.model1];\n      var model2 = this.keys[this.model2];\n      var randomIdRemoveToKana = Math.floor(Math.random() * this.kanas.length);\n      this.kanas.forEach(function (kana, index) {\n        if (index === randomIdRemoveToKana) return;\n        var word = {\n          index: index * 2 - 1,\n          id: kana.id,\n          text: kana[model1],\n          state: 1\n        };\n\n        _this2.words.push(word);\n\n        word = {\n          index: index * 2,\n          id: kana.id,\n          text: kana[model2],\n          state: 1\n        };\n\n        _this2.words.push(word);\n      });\n    },\n    setBlurImg: function setBlurImg(base64) {\n      this.$refs.blur.forEach(function (item) {\n        item.setBase64(base64);\n      });\n    },\n    countDownStart: function countDownStart() {\n      var _this3 = this;\n\n      var timer = window.setInterval(function () {\n        _this3.countDown--;\n        if (_this3.countDown > 0) _this3.words = _this3.shuffle(_this3.words);\n        if (_this3.countDown === 0) _this3.gameStart(timer);\n      }, 1000);\n    },\n    gameStart: function gameStart(timer) {\n      window.clearInterval(timer);\n      this.$emit('gameStart');\n    },\n    shuffle: function shuffle(v) {\n      for (var j, x, i = v.length; i; j = _parseInt(Math.random() * i), x = v[--i], v[i] = v[j], v[j] = x) {\n        ;\n      }\n\n      return v;\n    },\n    itemSelect: function itemSelect(item) {\n      if (item.state === 3) return;\n\n      if (this.preItem) {\n        if (this.preItem.id === item.id && this.preItem.index !== item.index) {\n          this.preItem.state = 3;\n          item.state = 3;\n          this.$emit('gameItemComplete', this.isGameOver());\n        } else {\n          this.preItem.state = 1;\n        }\n\n        this.preItem = false;\n      } else {\n        item.state = 2;\n        this.preItem = item;\n      }\n    },\n    isGameOver: function isGameOver() {\n      return this.words.filter(function (v) {\n        return v.state !== 3;\n      }).length === 0;\n    }\n  },\n  components: {\n    Blur: Blur\n  }\n};",{"version":3,"sources":["start.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"start\">\n    <transition-group v-if=\"countDown!==0\" name=\"cell\" tag=\"ul\" class=\"container\">\n      <li class=\"item\" v-for=\"word in words\" :key=\"word.index\">\n        <div class=\"item-content\" @setBlurImg=\"setBlurImg\" :blur-src=\"blurSrc\" ref=\"blur\" :bR=\"'0px'\" :bS=\"'none'\"\n             :blurValue=\"50\">\n          <span>{{word.text}}</span>\n        </div>\n      </li>\n    </transition-group>\n    <ul v-else class=\"container\">\n      <li v-for=\"word in words\" :key=\"word.index\" @click=\"itemSelect(word)\" class=\"item\"\n          :class=\"{active:word.state===2,complete:word.state===3}\">\n        <Blur class=\"item-content\" @setBlurImg=\"setBlurImg\" :blur-src=\"blurSrc\" ref=\"blur\" :bR=\"'0px'\" :bS=\"'none'\"\n              :blurValue=\"50\">\n          <span>{{word.text}}</span>\n        </Blur>\n      </li>\n    </ul>\n    <transition name=\"countDown\">\n      <div class=\"countDown\" v-if=\"countDown\">\n        <h1>{{countDown}}</h1>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n  import Blur from '../../blur/blur';\n  import {getKanaList} from '../../../api/kana';\n\n  export default {\n    name: \"start\",\n    props: {\n      blurSrc: {\n        type: String\n      },\n      model1: {\n        type: String\n      },\n      model2: {\n        type: String\n      }\n    },\n    data() {\n      return {\n        kanas: [],\n        keys: ['hiragana', 'katakana', 'romaji'],\n        words: [],\n        blurFlag: false,\n        countDown: 3,\n        preItem: false,\n      }\n    },\n    mounted() {\n      this.$emit('gameInit');\n      this.initKanas();\n      this.countDownStart();\n    },\n    methods: {\n      initKanas() {\n        getKanaList().then((res) => {\n          this.kanas = res.data.data;\n          this.initWords();\n        });\n      },\n      initWords() {\n        let model1 = this.keys[this.model1];\n        let model2 = this.keys[this.model2];\n        let randomIdRemoveToKana = Math.floor(Math.random()*this.kanas.length);\n        this.kanas.forEach((kana, index) => {\n          if (index === randomIdRemoveToKana) return;\n          let word = {\n            index: index * 2 - 1,\n            id: kana.id,\n            text: kana[model1],\n            state: 1,\n          };\n          this.words.push(word);\n          word = {\n            index: index * 2,\n            id: kana.id,\n            text: kana[model2],\n            state: 1,\n          };\n          this.words.push(word);\n        });\n      },\n      setBlurImg(base64) {\n        this.$refs.blur.forEach((item) => {\n          item.setBase64(base64);\n        })\n      },\n      countDownStart() {\n        let timer = window.setInterval(() => {\n          this.countDown--;\n          if (this.countDown > 0) this.words = this.shuffle(this.words);\n          if (this.countDown === 0) this.gameStart(timer);\n        }, 1000);\n      },\n      gameStart(timer) {\n        window.clearInterval(timer);\n        this.$emit('gameStart');\n      },\n      shuffle(v) {\n        for (let j, x, i = v.length; i; j = parseInt(Math.random() * i), x = v[--i], v[i] = v[j], v[j] = x) ;\n        return v;\n      },\n      itemSelect(item) {\n        if (item.state === 3) return;\n        if (this.preItem) {\n          if (this.preItem.id === item.id && this.preItem.index !== item.index) {\n            this.preItem.state = 3;\n            item.state = 3;\n            this.$emit('gameItemComplete',this.isGameOver());\n          } else {\n            this.preItem.state = 1;\n          }\n          this.preItem = false;\n        } else {\n          item.state = 2;\n          this.preItem = item;\n        }\n      },\n      isGameOver(){\n        return this.words.filter((v)=>{\n          return v.state!==3;\n        }).length===0;\n      }\n    },\n    components: {\n      Blur\n    }\n\n  }\n</script>\n\n<style scoped>\n  .start {\n    position: relative;\n  }\n\n  .container {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .item {\n    position: relative;\n    width: 11%;\n    padding-bottom: 11%;\n    height: 0;\n    background: rgba(255, 255, 255, .8);\n  }\n\n  .item > .item-content {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n  }\n\n  .countDown {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    color: #fff;\n    background: rgba(0, 0, 0, .8);\n  }\n\n  .active.item {\n    background: rgba(0, 0, 0, .8);\n  }\n\n  .active.item > .item-content {\n    opacity: 0.8;\n  }\n\n  .complete.item {\n    opacity: 0;\n  }\n\n  .cell-move {\n    transition: transform 1s;\n  }\n\n  .countDown-enter-active, .countDown-leave-active {\n    transition: opacity .5s;\n  }\n\n  .countDown-enter, .countDown-leave-to /* .countDown-leave-active below version 2.1.8 */\n  {\n    opacity: 0;\n  }\n</style>"],"sourceRoot":"src/components/kana/start"}]}