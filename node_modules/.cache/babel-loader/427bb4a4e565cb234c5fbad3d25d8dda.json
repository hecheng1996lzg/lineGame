{"remainingRequest":"/usr/local/var/www/nihongo/lineGame/node_modules/babel-loader/lib/index.js!/usr/local/var/www/nihongo/lineGame/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/var/www/nihongo/lineGame/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/nihongo/lineGame/src/components/kana/rank/rank.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/nihongo/lineGame/src/components/kana/rank/rank.vue","mtime":1624502243584},{"path":"/usr/local/var/www/nihongo/lineGame/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/lineGame/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/lineGame/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/lineGame/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/usr/local/var/www/nihongo/lineGame/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Blur from '../../blur/blur';\nexport default {\n  name: \"rank\",\n  props: {\n    blurSrc: {\n      type: String\n    },\n    score: {\n      type: Number\n    },\n    time: {\n      type: Number\n    }\n  },\n  data: function data() {\n    return {\n      ranksTemplate: [{\n        name: 'kiryuu',\n        score: 330,\n        time: 363\n      }, {\n        name: 'akiyama',\n        score: 300,\n        time: 396\n      }, {\n        name: 'kasei',\n        score: 300,\n        time: 600\n      }],\n      ranks: [],\n      player: null,\n      playerId: null\n    };\n  },\n  components: {\n    Blur: Blur\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var user = JSON.parse(localStorage.getItem('nihongo'));\n    this.ranks = this.getRankStorage();\n    this.player = {\n      name: user.name,\n      score: this.score,\n      time: this.time\n    };\n    var i = 0;\n\n    for (i; i < this.ranks.length; i++) {\n      var rank = this.ranks[i];\n\n      if (this.player.score > rank.score || this.player.score === rank.score && this.player.time <= rank.time) {\n        this.playerId = i;\n        break;\n      }\n    }\n\n    if (this.playerId === null) this.playerId = i;\n    this.ranks.splice(this.playerId, 0, this.player);\n    this.setRankStorage();\n    var position = 0;\n    this.ranks.forEach(function (v, k) {\n      var pre = null;\n\n      if (k > 0) {\n        pre = _this.ranks[k - 1];\n      }\n\n      if (pre) {\n        if (pre.score > v.score || pre.score === v.score && pre.time < v.time) {\n          position++;\n        }\n      } else {\n        position++;\n      }\n\n      _this.ranks[k].place = position;\n    });\n    this.$emit('gameInit');\n  },\n  computed: {\n    put0: function put0() {\n      return function (num) {\n        return num < 10 ? '0' + num : num;\n      };\n    }\n  },\n  methods: {\n    getRankStorage: function getRankStorage() {\n      var kanaRankStorage = JSON.parse(localStorage.getItem('kana_rank_storage'));\n      kanaRankStorage = kanaRankStorage ? kanaRankStorage : this.ranksTemplate;\n      return kanaRankStorage;\n    },\n    setRankStorage: function setRankStorage() {\n      localStorage.setItem('kana_rank_storage', _JSON$stringify(this.ranks));\n    }\n  }\n};",{"version":3,"sources":["rank.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <blur :blurSrc=\"blurSrc\" :blurValue=\"30\">\n    <div class=\"rank\">\n      <h2>排行榜</h2>\n      <table class=\"rank-container\">\n        <thead>\n        <tr>\n          <th width=\"16%\">名次</th>\n          <th>昵称</th>\n          <th>分数</th>\n          <th>时间</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"(item, key) in ranks\" :key=\"key\" :class=\"{active:key===playerId}\">\n          <td><span>{{ put0(item.place) }}</span></td>\n          <td><span>{{item.name}}</span></td>\n          <td><span>{{item.score}}</span></td>\n          <td><span>{{item.time}}</span></td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </blur>\n</template>\n\n<script>\n  import Blur from '../../blur/blur';\n\n  export default {\n    name: \"rank\",\n    props: {\n      blurSrc: {\n        type: String\n      },\n      score: {\n        type: Number,\n      },\n      time: {\n        type: Number,\n      }\n    },\n    data() {\n      return {\n        ranksTemplate: [\n          {\n            name: 'kiryuu',\n            score: 330,\n            time: 363\n          },\n          {\n            name: 'akiyama',\n            score: 300,\n            time: 396\n          },\n          {\n            name: 'kasei',\n            score: 300,\n            time: 600\n          },\n        ],\n        ranks: [],\n        player: null,\n        playerId: null,\n      }\n    },\n    components: {\n      Blur\n    },\n    mounted() {\n      let user = JSON.parse(localStorage.getItem('nihongo'));\n      this.ranks = this.getRankStorage();\n      this.player = {\n        name: user.name,\n        score: this.score,\n        time: this.time\n      };\n\n      let i = 0;\n      for (i; i < this.ranks.length; i++) {\n        let rank = this.ranks[i];\n        if (this.player.score > rank.score || (this.player.score === rank.score && this.player.time <= rank.time)) {\n          this.playerId = i;\n          break;\n        }\n      }\n      if (this.playerId === null) this.playerId = i;\n\n      this.ranks.splice(this.playerId, 0, this.player);\n\n      this.setRankStorage();\n\n      let position = 0;\n      this.ranks.forEach((v, k) => {\n        let pre = null;\n        if (k > 0) {\n          pre = this.ranks[k - 1];\n        }\n        if (pre) {\n          if (pre.score > v.score || (pre.score === v.score && pre.time < v.time)) {\n            position++;\n          }\n        } else {\n          position++;\n        }\n\n        this.ranks[k].place = position;\n      });\n\n      this.$emit('gameInit');\n    },\n    computed: {\n      put0() {\n        return (num) => {\n          return num < 10 ? '0' + num : num;\n        }\n      }\n    },\n    methods: {\n      getRankStorage() {\n        let kanaRankStorage = JSON.parse(localStorage.getItem('kana_rank_storage'));\n        kanaRankStorage = kanaRankStorage ? kanaRankStorage : this.ranksTemplate;\n        return kanaRankStorage\n      },\n      setRankStorage() {\n        localStorage.setItem('kana_rank_storage', JSON.stringify(this.ranks));\n      }\n    }\n\n  }\n</script>\n\n<style scoped>\n  .rank {\n    display: flex;\n    flex-direction: column;\n    padding: 20px 10px;\n  }\n\n  h2 {\n    text-align: center;\n    color: #333;\n  }\n\n  .rank-container {\n    color: #333;\n  }\n\n  .rank-container th {\n    font-weight: initial;\n    padding-bottom: 3px;\n  }\n\n  .rank-container > thead > tr > th:nth-of-type(n+2) {\n    text-align: left;\n    text-indent: 2ch;\n  }\n\n  .rank-container > tbody > tr > td {\n    padding: 5px 0 3px;\n  }\n\n  .rank-container > tbody > tr > td:nth-of-type(1) {\n    text-align: center;\n  }\n\n  .rank-container > tbody > tr > td:nth-of-type(n+2) {\n    text-indent: 2ch;\n  }\n\n  .rank-container {\n    border-collapse: collapse;\n  }\n\n  .rank-container > thead > tr {\n    border-bottom: 1px solid rgba(255, 255, 255, .8);\n  }\n\n  .rank-container > tbody > tr.active {\n    background: rgba(255, 255, 255, .3);\n  }\n\n</style>"],"sourceRoot":"src/components/kana/rank"}]}