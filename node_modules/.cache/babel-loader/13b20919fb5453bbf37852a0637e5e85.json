{"remainingRequest":"/usr/local/var/www/nihongo/frontend/node_modules/babel-loader/lib/index.js!/usr/local/var/www/nihongo/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/var/www/nihongo/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/nihongo/frontend/src/components/progress-bar/simple-progress-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/nihongo/frontend/src/components/progress-bar/simple-progress-bar.vue","mtime":1550248669943},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    value: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 0\n    },\n    color: {\n      type: String,\n      default: 'rgb(51, 210, 145)'\n    }\n  },\n  computed: {\n    percentage: function percentage() {\n      return this.value / this.max * 100;\n    }\n  }\n};",{"version":3,"sources":["simple-progress-bar.vue"],"names":[],"mappings":";;;;;;;AAOA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AATA,GADA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,KAAA,GAAA,KAAA,GAAA,GAAA,GAAA;AACA;AAHA;AAfA,CAAA","sourcesContent":["<template>\n  <div class=\"simple-progress-bar\">\n    <div :style=\"{background:color,width:percentage+'%'}\"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    props: {\n      value: {\n        type: Number,\n        default: 0,\n      },\n      max: {\n        type: Number,\n        default: 0,\n      },\n      color: {\n        type: String,\n        default: 'rgb(51, 210, 145)'\n      },\n    },\n    computed: {\n      percentage() {\n        return this.value / this.max * 100;\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .simple-progress-bar {\n    height: 3px;\n    background: rgba(0, 0, 0, .3);\n  }\n\n  .simple-progress-bar > div {\n    height: 3px;\n  }\n</style>"],"sourceRoot":"src/components/progress-bar"}]}