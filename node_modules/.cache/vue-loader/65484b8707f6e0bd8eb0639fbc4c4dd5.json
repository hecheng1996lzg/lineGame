{"remainingRequest":"/usr/local/var/www/nihongo/lineGame/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/nihongo/lineGame/src/components/card/card.vue?vue&type=style&index=0&id=839cd962&scoped=true&lang=css&","dependencies":[{"path":"/usr/local/var/www/nihongo/lineGame/src/components/card/card.vue","mtime":1550651833218},{"path":"/usr/local/var/www/nihongo/lineGame/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/lineGame/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/lineGame/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/lineGame/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/lineGame/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.cards {\n  position: relative;\n  overflow: hidden;\n}\n\n.bg-blur {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.bg-blur > canvas {\n  width: 100%;\n  height: 100%;\n  object-position: center;\n  object-fit: cover;\n}\n\n.card-list {\n  position: relative;\n  width: 100%;\n  height: 300px;\n}\n\n.card-item.past {\n  transform: translateX(-200%) scale(.9);\n}\n\n.card-item.prev {\n  transform: translateX(-100%) scale(.9);\n}\n\n.card-item.active {\n  transform: translateX(0%) scale(1);\n}\n\n.card-item.next {\n  transform: translateX(100%) scale(.9);\n}\n\n.card-item.future {\n  transform: translateX(200%) scale(.9);\n}\n\n.card-item {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  width: 80%;\n  height: 200px;\n  border-radius: 6px;\n  transition: transform 0.3s ease;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  background: rgba(255, 255, 255, .6);\n}\n\n.card-item > .enter {\n  border-radius: 6px 6px 0 0;\n  height: 30px;\n  background: #fff;\n}\n\n.card-item > .enter input {\n  width: calc(100% - 20px);\n  margin: 0 auto;\n  padding: 4px 10px;\n  font-size: 16px;\n  background: none;\n}\n\n.card-item > .content {\n  flex: 1;\n  position: relative;\n  height: 170px;\n}\n\n.card-item > .content > img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n  border-radius: 0 0 6px 6px;\n}\n\n.answer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  width: calc(100% - 50px);\n  height: calc(100% - 50px);\n  padding: 25px;\n  color: #fff;\n  background: rgba(0, 0, 0, .6);\n  border-radius: 0 0 6px 6px;\n}\n\n.answer > .iconfont {\n  font-size: 30px;\n  margin-right: 20px;\n}\n\n.card-item > .tips {\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  justify-content: space-between;\n  width: calc(100% - 20px);\n  height: 16px;\n  padding: 3px 10px;\n  color: rgba(255, 255, 255, .5);\n  font-size: 10px;\n  background: none;\n  border-radius: 0 0 6px 6px;\n}\n\n.card-item > .tips > div {\n  opacity: 0;\n}\n\n.card-item > .tips.tipsShow {\n  background: rgba(0, 0, 0, .3);\n}\n\n.card-item > .tips.tipsShow > div {\n  opacity: 1;\n}\n",{"version":3,"sources":["card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"card.vue","sourceRoot":"src/components/card","sourcesContent":["<template>\n  <div class=\"cards\">\n    <div class=\"bg-blur\">\n      <canvas v-for=\"(item,index) in cardList\" :key=\"index\" v-show=\"index===activeIndex\" ref=\"blurCanvas\"></canvas>\n    </div>\n    <ul class=\"card-list\">\n      <li v-for=\"(item,index) in cardList\" :key=\"index\" @click=\"cardToggle($event,index)\" ref=\"cards\"\n          class=\"card-item\"\n          :class=\"{\n          past: pastCard(index),\n          prev: prevCard(index),\n          active: activeCard(index),\n          next: nextCard(index),\n          future: futureCard(index) }\">\n        <div class=\"enter\">\n          <form @submit.prevent=\"cardSubmit(item,index)\">\n            <input v-model=\"item.enter\" :disabled=\"item.isDisable\" type=\"text\" class=\"bl input\" required\n                   placeholder=\"Enter here\"/>\n          </form>\n        </div>\n        <div class=\"content\">\n          <div class=\"answer\" v-if=\"item.enterState\">\n            <span class=\"iconfont\"\n                  :class=\"{\n                  'icon-tianjiashibai': item.enterState===2,\n                  'icon-tianjiachenggong': item.enterState===1}\"></span>\n            <div class=\" info\">\n              <span>{{item.note}}</span>\n              <h2>{{item.answer}}</h2>\n            </div>\n          </div>\n          <img src=\"\" alt=\"\" ref=\"cardImg\">\n        </div>\n        <div class=\"tips\" :class=\"{tipsShow:tipsShow}\">\n          <div>{{item.tips}}</div>\n          <span class=\"iconfont\" :class=\"{\n          'icon-eye1':tipsShow,\n          'icon-eye':!tipsShow}\" @click=\"showTips()\"></span>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  import * as StackBlur from 'stackblur-canvas';\n\n  const PRELOADING_NUM = 3;   //预加载数量\n  export default {\n    name: \"card\",\n    props: {\n      /**\n       * @object Example\n       *  id: 1,\n       *  parentId: 31,\n       *  imgUrl: 1.jpeg,\n       *  enter: \"\",\n       *  answer: 可愛い,\n       *  tips: かわいい,\n       *  note: 可爱的,\n       *  [enter]: \"\"\n       *  [enterState]: 0(没出现结果) | 1(正确) | 2（错误）\n       * */\n      cards: {\n        type: Array,\n        default() {\n          return [];\n        },\n      },\n    },\n    data() {\n      return {\n        cardList: this.cards,\n        activeIndex: 0,\n        tipsShow: false,\n      }\n    },\n    watch: {\n      cards() {\n        for (let i = 0; i < PRELOADING_NUM; i++) {\n          this.cardImgLoad(i,\n            this.cards[i].parentId,\n            this.cards[i].imgUrl)\n        }\n      },\n      activeIndex() {\n        let index = PRELOADING_NUM + this.activeIndex - 1;\n        if (index >= this.cards.length) return;\n        this.cardImgLoad(index,\n          this.cards[index].parentId,\n          this.cards[index].imgUrl)\n      }\n    },\n    computed: {\n      pastCard() {\n        return (index) => {\n          return index <= this.activeIndex - 2;\n        }\n      },\n      prevCard() {\n        return (index) => {\n          return index === this.activeIndex - 1;\n        }\n      },\n      activeCard() {\n        return (index) => {\n          return index === this.activeIndex;\n        }\n      },\n      nextCard() {\n        return (index) => {\n          return index === this.activeIndex + 1;\n        }\n      },\n      futureCard() {\n        return (index) => {\n          return index >= this.activeIndex + 2;\n        }\n      }\n    },\n    methods: {\n      cardToggle(e, index) {\n        if (index > this.activeIndex) {\n          this.activeIndex++;\n        }\n        else if (index < this.activeIndex) {\n          this.activeIndex--;\n        }\n      },\n      showTips() {\n        this.tipsShow = !this.tipsShow;\n      },\n      cardImgLoad(index, id, name) {\n        this.$nextTick(() => {\n          let img = this.$refs.cardImg[index];\n          let canvas = this.$refs.blurCanvas[index];\n          if (canvas.style.width && canvas.style.height) return;  //很蠢的一种防止canvas重绘，唉不知道咋整，以后想办法吧。\n          img.crossOrigin = '';\n          img.onload = function () {\n            canvas.width = img.width;\n            canvas.height = img.height;\n            StackBlur.image(img, canvas, 50);\n            canvas.style.width = '100%';\n            canvas.style.height = '100%';\n          };\n          img.src = `${process.env.VUE_APP_IMG_API}/courses/${id}/${name}`;\n        })\n      },\n      cardSubmit(card, index) {\n        if (card.isDisable) return;\n        let answer = card.answer ? card.answer : card.note;   // 是否使用备选答案\n        answer = answer.split('|');\n        if (answer.indexOf(card.enter) !== -1) {\n          // 输入正确\n          card.enterState = 1;\n          this.$emit('right', card);\n        } else {\n          // 输入错误\n          let cardClone = Object.assign({}, card);\n          cardClone.enter = \"\";\n          card.enterState = 2;\n          this.cards.splice(PRELOADING_NUM + index, 0, cardClone);\n        }\n        card.isDisable = true;\n\n        let prevIndex = this.activeIndex;\n        window.setTimeout(() => {\n          if (prevIndex === this.activeIndex) {\n            this.activeIndex++;\n            window.setTimeout(()=>{\n              this.$refs.cards[this.activeIndex].getElementsByClassName('input')[0].focus()\n            },200);\n          }\n        }, 1000);\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .cards {\n    position: relative;\n    overflow: hidden;\n  }\n\n  .bg-blur {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n\n  .bg-blur > canvas {\n    width: 100%;\n    height: 100%;\n    object-position: center;\n    object-fit: cover;\n  }\n\n  .card-list {\n    position: relative;\n    width: 100%;\n    height: 300px;\n  }\n\n  .card-item.past {\n    transform: translateX(-200%) scale(.9);\n  }\n\n  .card-item.prev {\n    transform: translateX(-100%) scale(.9);\n  }\n\n  .card-item.active {\n    transform: translateX(0%) scale(1);\n  }\n\n  .card-item.next {\n    transform: translateX(100%) scale(.9);\n  }\n\n  .card-item.future {\n    transform: translateX(200%) scale(.9);\n  }\n\n  .card-item {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n    width: 80%;\n    height: 200px;\n    border-radius: 6px;\n    transition: transform 0.3s ease;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n    background: rgba(255, 255, 255, .6);\n  }\n\n  .card-item > .enter {\n    border-radius: 6px 6px 0 0;\n    height: 30px;\n    background: #fff;\n  }\n\n  .card-item > .enter input {\n    width: calc(100% - 20px);\n    margin: 0 auto;\n    padding: 4px 10px;\n    font-size: 16px;\n    background: none;\n  }\n\n  .card-item > .content {\n    flex: 1;\n    position: relative;\n    height: 170px;\n  }\n\n  .card-item > .content > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n    border-radius: 0 0 6px 6px;\n  }\n\n  .answer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    width: calc(100% - 50px);\n    height: calc(100% - 50px);\n    padding: 25px;\n    color: #fff;\n    background: rgba(0, 0, 0, .6);\n    border-radius: 0 0 6px 6px;\n  }\n\n  .answer > .iconfont {\n    font-size: 30px;\n    margin-right: 20px;\n  }\n\n  .card-item > .tips {\n    position: absolute;\n    bottom: 0;\n    display: flex;\n    justify-content: space-between;\n    width: calc(100% - 20px);\n    height: 16px;\n    padding: 3px 10px;\n    color: rgba(255, 255, 255, .5);\n    font-size: 10px;\n    background: none;\n    border-radius: 0 0 6px 6px;\n  }\n\n  .card-item > .tips > div {\n    opacity: 0;\n  }\n\n  .card-item > .tips.tipsShow {\n    background: rgba(0, 0, 0, .3);\n  }\n\n  .card-item > .tips.tipsShow > div {\n    opacity: 1;\n  }\n</style>"]}]}