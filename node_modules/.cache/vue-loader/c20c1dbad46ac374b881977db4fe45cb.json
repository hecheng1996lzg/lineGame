{"remainingRequest":"/usr/local/var/www/nihongo/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/nihongo/frontend/src/components/kana/start/start.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/nihongo/frontend/src/components/kana/start/start.vue","mtime":1552376461753},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/var/www/nihongo/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Blur from '../../blur/blur';\nimport {getKanaList} from '../../../api/kana';\n\nexport default {\n  name: \"start\",\n  props: {\n    blurSrc: {\n      type: String\n    },\n    model1: {\n      type: String\n    },\n    model2: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      kanas: [],\n      keys: ['hiragana', 'katakana', 'romaji'],\n      words: [],\n      blurFlag: false,\n      countDown: 3,\n      preItem: false,\n    }\n  },\n  mounted() {\n    this.$emit('gameInit');\n    this.initKanas();\n    this.countDownStart();\n  },\n  methods: {\n    initKanas() {\n      getKanaList().then((res) => {\n        this.kanas = res.data.data;\n        this.initWords();\n      });\n    },\n    initWords() {\n      let model1 = this.keys[this.model1];\n      let model2 = this.keys[this.model2];\n      let randomIdRemoveToKana = Math.floor(Math.random()*this.kanas.length);\n      this.kanas.forEach((kana, index) => {\n        if (index === randomIdRemoveToKana) return;\n        let word = {\n          index: index * 2 - 1,\n          id: kana.id,\n          text: kana[model1],\n          state: 1,\n        };\n        this.words.push(word);\n        word = {\n          index: index * 2,\n          id: kana.id,\n          text: kana[model2],\n          state: 1,\n        };\n        this.words.push(word);\n      });\n    },\n    setBlurImg(base64) {\n      this.$refs.blur.forEach((item) => {\n        item.setBase64(base64);\n      })\n    },\n    countDownStart() {\n      let timer = window.setInterval(() => {\n        this.countDown--;\n        if (this.countDown > 0) this.words = this.shuffle(this.words);\n        if (this.countDown === 0) this.gameStart(timer);\n      }, 1000);\n    },\n    gameStart(timer) {\n      window.clearInterval(timer);\n      this.$emit('gameStart');\n    },\n    shuffle(v) {\n      for (let j, x, i = v.length; i; j = parseInt(Math.random() * i), x = v[--i], v[i] = v[j], v[j] = x) ;\n      return v;\n    },\n    itemSelect(item) {\n      if (item.state === 3) return;\n      if (this.preItem) {\n        if (this.preItem.id === item.id && this.preItem.index !== item.index) {\n          this.preItem.state = 3;\n          item.state = 3;\n          this.$emit('gameItemComplete',this.isGameOver());\n        } else {\n          this.preItem.state = 1;\n        }\n        this.preItem = false;\n      } else {\n        item.state = 2;\n        this.preItem = item;\n      }\n    },\n    isGameOver(){\n      return this.words.filter((v)=>{\n        return v.state!==3;\n      }).length===0;\n    }\n  },\n  components: {\n    Blur\n  }\n\n}\n",{"version":3,"sources":["start.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"start.vue","sourceRoot":"src/components/kana/start","sourcesContent":["<template>\n  <div class=\"start\">\n    <transition-group v-if=\"countDown!==0\" name=\"cell\" tag=\"ul\" class=\"container\">\n      <li class=\"item\" v-for=\"word in words\" :key=\"word.index\">\n        <div class=\"item-content\" @setBlurImg=\"setBlurImg\" :blur-src=\"blurSrc\" ref=\"blur\" :bR=\"'0px'\" :bS=\"'none'\"\n             :blurValue=\"50\">\n          <span>{{word.text}}</span>\n        </div>\n      </li>\n    </transition-group>\n    <ul v-else class=\"container\">\n      <li v-for=\"word in words\" :key=\"word.index\" @click=\"itemSelect(word)\" class=\"item\"\n          :class=\"{active:word.state===2,complete:word.state===3}\">\n        <Blur class=\"item-content\" @setBlurImg=\"setBlurImg\" :blur-src=\"blurSrc\" ref=\"blur\" :bR=\"'0px'\" :bS=\"'none'\"\n              :blurValue=\"50\">\n          <span>{{word.text}}</span>\n        </Blur>\n      </li>\n    </ul>\n    <transition name=\"countDown\">\n      <div class=\"countDown\" v-if=\"countDown\">\n        <h1>{{countDown}}</h1>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n  import Blur from '../../blur/blur';\n  import {getKanaList} from '../../../api/kana';\n\n  export default {\n    name: \"start\",\n    props: {\n      blurSrc: {\n        type: String\n      },\n      model1: {\n        type: String\n      },\n      model2: {\n        type: String\n      }\n    },\n    data() {\n      return {\n        kanas: [],\n        keys: ['hiragana', 'katakana', 'romaji'],\n        words: [],\n        blurFlag: false,\n        countDown: 3,\n        preItem: false,\n      }\n    },\n    mounted() {\n      this.$emit('gameInit');\n      this.initKanas();\n      this.countDownStart();\n    },\n    methods: {\n      initKanas() {\n        getKanaList().then((res) => {\n          this.kanas = res.data.data;\n          this.initWords();\n        });\n      },\n      initWords() {\n        let model1 = this.keys[this.model1];\n        let model2 = this.keys[this.model2];\n        let randomIdRemoveToKana = Math.floor(Math.random()*this.kanas.length);\n        this.kanas.forEach((kana, index) => {\n          if (index === randomIdRemoveToKana) return;\n          let word = {\n            index: index * 2 - 1,\n            id: kana.id,\n            text: kana[model1],\n            state: 1,\n          };\n          this.words.push(word);\n          word = {\n            index: index * 2,\n            id: kana.id,\n            text: kana[model2],\n            state: 1,\n          };\n          this.words.push(word);\n        });\n      },\n      setBlurImg(base64) {\n        this.$refs.blur.forEach((item) => {\n          item.setBase64(base64);\n        })\n      },\n      countDownStart() {\n        let timer = window.setInterval(() => {\n          this.countDown--;\n          if (this.countDown > 0) this.words = this.shuffle(this.words);\n          if (this.countDown === 0) this.gameStart(timer);\n        }, 1000);\n      },\n      gameStart(timer) {\n        window.clearInterval(timer);\n        this.$emit('gameStart');\n      },\n      shuffle(v) {\n        for (let j, x, i = v.length; i; j = parseInt(Math.random() * i), x = v[--i], v[i] = v[j], v[j] = x) ;\n        return v;\n      },\n      itemSelect(item) {\n        if (item.state === 3) return;\n        if (this.preItem) {\n          if (this.preItem.id === item.id && this.preItem.index !== item.index) {\n            this.preItem.state = 3;\n            item.state = 3;\n            this.$emit('gameItemComplete',this.isGameOver());\n          } else {\n            this.preItem.state = 1;\n          }\n          this.preItem = false;\n        } else {\n          item.state = 2;\n          this.preItem = item;\n        }\n      },\n      isGameOver(){\n        return this.words.filter((v)=>{\n          return v.state!==3;\n        }).length===0;\n      }\n    },\n    components: {\n      Blur\n    }\n\n  }\n</script>\n\n<style scoped>\n  .start {\n    position: relative;\n  }\n\n  .container {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .item {\n    position: relative;\n    width: 11%;\n    padding-bottom: 11%;\n    height: 0;\n    background: rgba(255, 255, 255, .8);\n  }\n\n  .item > .item-content {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n  }\n\n  .countDown {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    color: #fff;\n    background: rgba(0, 0, 0, .8);\n  }\n\n  .active.item {\n    background: rgba(0, 0, 0, .8);\n  }\n\n  .active.item > .item-content {\n    opacity: 0.8;\n  }\n\n  .complete.item {\n    opacity: 0;\n  }\n\n  .cell-move {\n    transition: transform 1s;\n  }\n\n  .countDown-enter-active, .countDown-leave-active {\n    transition: opacity .5s;\n  }\n\n  .countDown-enter, .countDown-leave-to /* .countDown-leave-active below version 2.1.8 */\n  {\n    opacity: 0;\n  }\n</style>"]}]}